---
import { getCollection } from "astro:content";

const { collectionName, baseEntriesUrl, ...props } = Astro.props;

const baseUrl = import.meta.env.BASE_URL
const entries = await getCollection(collectionName);
const posts = entries.filter(entry => entry.id.startsWith(`${baseEntriesUrl}/`) && !entry.data.isDraft);

---

<article>
  {posts.length > 0 ? 
  <div>
  <h2>Índice de Contenido</h2>

  <table>
    <thead>
      <tr>
        <th class="seccion-th">Sección</th>
        <th class="enlace-th">Enlace</th>
      </tr>
    </thead>
    <tbody>
      {posts.map((post, index) => {
        const nombre = post.data.title;  
        const enlace = `${baseUrl}/${collectionName}/${baseEntriesUrl}/${post.id.replace(`${baseEntriesUrl}/`, '')}`.replace('.mdx', '');
        return (
          <tr>
            <td class="seccion">{index + 1}</td>
            <td class="enlace-td"><a href={enlace}>{nombre}</a></td>
          </tr>
        );
      })}
    </tbody>
  </table> 
  </div>: 
  <h2>😔 Lo siento... Pronto habrá contenido disponible 🫡</h2>
}
</article>

<style>
  table {
    border: solid 1px var(--text-color);
    border-radius: 5px;
    border-collapse: unset;
  }

  .seccion-th{
    display: flex;
    justify-content: center;
  }
  .enlace-th{
    padding-left: 4px;
  }
  .enlace-td{
    padding-left: 4px;
  }

  tr th{
    color: var(--accent);
  }
  .seccion{
    color: var(--text-color);
    display: flex;
    justify-content: center;
  }
</style>
